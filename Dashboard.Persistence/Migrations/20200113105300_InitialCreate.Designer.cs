// <auto-generated />
using Dashboard.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dashboard.Persistence.Migrations
{
    [DbContext(typeof(DashboardContext))]
    [Migration("20200113105300_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dashboard.Persistence.Models.Role", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KeyID");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            KeyID = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            KeyID = 2,
                            Name = "Customer Executive"
                        });
                });

            modelBuilder.Entity("Dashboard.Persistence.Models.Status", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KeyID");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            KeyID = 1,
                            Name = "Active"
                        },
                        new
                        {
                            KeyID = 2,
                            Name = "Pending"
                        },
                        new
                        {
                            KeyID = 3,
                            Name = "Inactive"
                        });
                });

            modelBuilder.Entity("Dashboard.Persistence.Models.User", b =>
                {
                    b.Property<int>("KeyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("KeyID");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            KeyID = 1,
                            Email = "user1@abc.com",
                            MobileNumber = "8181811818",
                            Name = "User 1",
                            RoleId = 1,
                            StatusId = 1
                        },
                        new
                        {
                            KeyID = 2,
                            Email = "user2@abc.com",
                            MobileNumber = "8181811818",
                            Name = "User 2",
                            RoleId = 1,
                            StatusId = 2
                        },
                        new
                        {
                            KeyID = 3,
                            Email = "user3@abc.com",
                            MobileNumber = "8181811818",
                            Name = "User 3",
                            RoleId = 1,
                            StatusId = 3
                        },
                        new
                        {
                            KeyID = 4,
                            Email = "user4@abc.com",
                            MobileNumber = "8181811818",
                            Name = "User 4",
                            RoleId = 2,
                            StatusId = 1
                        },
                        new
                        {
                            KeyID = 5,
                            Email = "user5@abc.com",
                            MobileNumber = "8181811818",
                            Name = "User 5",
                            RoleId = 2,
                            StatusId = 2
                        });
                });

            modelBuilder.Entity("Dashboard.Persistence.Models.User", b =>
                {
                    b.HasOne("Dashboard.Persistence.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dashboard.Persistence.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
